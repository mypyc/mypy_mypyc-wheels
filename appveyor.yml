# skip_non_tags: true

cache:
  - '%LOCALAPPDATA%\pip\Cache'

image: Visual Studio 2017

environment:
  matrix:
    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

install:
    - "git submodule update --init --recursive"
    - "%PYTHON%\\python.exe -m pip install -U pip setuptools wheel"
    - "%PYTHON%\\python.exe -m pip install -U -r mypyc-requirements.txt"

build: off

test_script:
    - systeminfo
    - wmic cpu get SocketDesignation, NumberOfCores, NumberOfLogicalProcessors /Format:List
    # distutils wants to use the 32-bit cross-compiler since 64-bit might not be
    # is present "lighter-weight installs". We arrange to always use the 64-bit
    # version because the 32-bit linker runs out of memory linking mypy.
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
    - "SET DISTUTILS_USE_SDK=1"
    - "SET MYPYC_OPT_LEVEL=d"
    - "cd mypy"
    - "%PYTHON%\\python.exe setup.py --use-mypyc bdist_wheel"
    - "cd .."

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
- path: mypy\dist\*
  name: wheel

deploy:
  - provider: GitHub
    release: $(appveyor_repo_tag_name)
    artifact:  wheel
    auth_token:
        secure: rNWDrQcDx8+oeTCfEOIkX0YPw0wr41875VxA75VivfYu7e3fs9L3EXTXbbt5YCXb
    on:
     appveyor_repo_tag: true       # deploy on tag push only

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
