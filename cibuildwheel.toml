[tool.cibuildwheel]

build-frontend = "build"
linux.manylinux-x86_64-image = "manylinux_2_28"
linux.manylinux-aarch64-image = "manylinux_2_28"
linux.musllinux-x86_64-image = "musllinux_1_1"  # Change to musllinux_1_2 at some point
linux.musllinux-aarch64-image = "musllinux_1_1"  # Change to musllinux_1_2 at some point

# Don't build 32-bit wheels or PyPy
skip = [
  "*-manylinux_i686",
  "*-musllinux_i686",
  "*-win32",
  "pp*",
]

# Python 3.8 can't be tested on macOS arm64
test-skip = "cp38-macosx_arm64"

build-verbosity = 1

linux.before-all = [
  "yum install -y llvm-toolset || yum -v install -y llvm-toolset",
]

before-test = [
  "pip install -r {project}/mypy/test-requirements.txt",
]

# pytest looks for configuration files in the parent directories of where the tests live.
# since we are trying to run the tests from their installed location, we copy those into
# the venv. Ew ew ew.
# We don't run external mypyc tests since there's some issue with compilation on the
# manylinux image we use.
test-command = """ \
  ( \
     DIR=$(python -c 'import mypy, os; dn = os.path.dirname; print(dn(dn(mypy.__path__[0])))') \
     && cp '{project}/mypy/pyproject.toml' '{project}/mypy/conftest.py' $DIR \
\
     && MYPY_TEST_DIR=$(python -c 'import mypy.test; print(mypy.test.__path__[0])') \
     && MYPYC_TEST_DIR=$(python -c 'import mypyc.test; print(mypyc.test.__path__[0])') \
\
     && MYPY_TEST_PREFIX='{project}/mypy' pytest $MYPY_TEST_DIR $MYPYC_TEST_DIR -k 'not test_external' \
   )
"""

# I ran into some flaky tests on windows, so only run testcheck. it looks like we
# previously didn't run any tests on windows wheels, so this is a net win.
windows.test-command = """ \
  bash -c "( \
    DIR=$(python -c 'import mypy, os; dn = os.path.dirname; print(dn(dn(mypy.__path__[0])))') \
    && cp '{project}/mypy/pyproject.toml' '{project}/mypy/conftest.py' $DIR \
\
    && MYPY_TEST_DIR=$(python -c 'import mypy.test; print(mypy.test.__path__[0])') \
    && MYPY_TEST_PREFIX='{project}/mypy' pytest $MYPY_TEST_DIR/testcheck.py \
  )"
"""

[tool.cibuildwheel.config-settings]
--build-option = "--use-mypyc"

[tool.cibuildwheel.environment]
MYPYC_OPT_LEVEL = "3"
MYPYC_DEBUG_LEVEL = "0"

[tool.cibuildwheel.windows.environment]
MYPYC_OPT_LEVEL = "2"
MYPYC_DEBUG_LEVEL = "0"

[tool.cibuildwheel.linux.environment]
# Add llvm paths to environment to eliminate scl usage (like manylinux image does for gcc toolset).
MYPYC_OPT_LEVEL = "3"
MYPYC_DEBUG_LEVEL = "0"
PATH="$PATH:/opt/rh/llvm-toolset-17.0/root/usr/bin"
LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/rh/llvm-toolset-17.0/root/usr/lib64"
CC="clang"

[[tool.cibuildwheel.overrides]]
select = "*musllinux*"
before-all = [
  "apk add --no-cache clang",
]
# Remove ruff from test requirements. Wheels are only provided for musllinux_1_2,
# not musllinux_1_1. Building from source would require rust.
# Ruff is only used for linting, safe to skip for tests.
before-test = [
  "sed -i -e '/ruff/d' {project}/mypy/test-requirements.txt",
  "git -C {project}/mypy update-index --assume-unchanged test-requirements.txt",
  "pip install -r {project}/mypy/test-requirements.txt",
]
environment = { MYPYC_OPT_LEVEL="3", MYPYC_DEBUG_LEVEL="0", CC="clang" }
